//*************************************************** Avec fonction ******************************************************
//********
FUNCTION scalar_prod(a: ARRAY_OF INTEGER,b: ARRAY_OF INTEGER) : FLOAT
VAR
    ps:FLOAT:=0; //Contains the dot(scalar) product of v1 and v2 (vectors of IR)
BEGIN
    FOR i FROM 0 TO a.length-1 STEP 1  DO
        //dot product of 2 vectors: a = [a1, a2, …, an] and b = [b1, b2, …, bn] is a.b = a1*b1 + a2*b2 +....+ an*bn
        ps:=ps+a[i]*b[i];  
    END_FOR
    RETURN ps ;
END
//********
ALGORITHM scalar_product_of_vectors
VAR
    V1:ARRAY_OF INTEGER[3]; V2:ARRAY_OF INTEGER[3]; 
    x:FLOAT;
BEGIN
//Lire les deux vecteurs
    Write("Donner les 3 composantes du 1er vecteur") 
    FOR i FROM 0 TO V1.length-1 DO
        Write("Composante", i ); Read(V1[i]);
    END_FOR
    Write("Donner les 3 composantes du 2eme vecteur") 
    FOR i FROM 0 TO V2.length-1 DO
        Write("Composante", i ); Read(V2[i]);
    END_FOR
//Appel à la fonction
    x:= dot_product(V1,V2);
    IF (x=0) THEN
        Write("The dot product of the vectors is zero. They are orthogonal.")
    ELSE
        Write("The vectors are not orthogonal.")
    END_IF
END
//*************************************************** Avec procédure *********************************************************
//********
PROCEDURE dot_product(a: ARRAY_OF INTEGER,b: ARRAY_OF INTEGER, VAR ps: FLOAT;)//ps Contains the dot(scalar) product of v1 and v2 (vectors of IR)
BEGIN
    FOR i FROM 0 TO a.length-1 STEP 1  DO
        //dot product of 2 vectors: a = [a1, a2, …, an] and b = [b1, b2, …, bn] is a.b = a1*b1 + a2*b2 +....+ an*bn
        ps:=ps + a[i]*b[i];  
    END_FOR
END
//********
ALGORITHM scalar_product
VAR
    V1:ARRAY_OF INTEGER[3]; V2:ARRAY_OF INTEGER[3]; 
BEGIN
//Lire les deux vecteurs
    Write("Donner les 3 composantes du 1er vecteur") 
    FOR i FROM 0 TO V1.length-1 DO
        Write("Composante", i ); Read(V1[i]);
    END_FOR
    Write("Donner les 3 composantes du 2eme vecteur") 
    FOR i FROM 0 TO V2.length-1 DO
        Write("Composante", i ); Read(V2[i]);
    END_FOR
//Appel à la procedure
dot_product(V1,V2,ps)
    IF (ps=0) THEN
        Write("The dot product of the vectors is zero. They are orthogonal.")
    ELSE
        Write("The vectors are not orthogonal.")
    END_IF
END